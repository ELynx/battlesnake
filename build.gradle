plugins {
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.diffplug.spotless' version '5.11.0'
    id 'de.undercouch.download' version '4.1.1'
}

group = 'ru.elynx'
version = '2.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic-staging'

    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic-staging')
}

task unzipNewrelic(type: Copy) {
    from (zipTree(file('newrelic-staging/newrelic-java.zip'))) {
        include '**/newrelic*jar'
        include '**/newrelic*yml'
    }
    into "$buildDir/libs"

    eachFile { fcp ->
        fcp.path = fcp.path.replaceFirst('newrelic', '')
    }

    includeEmptyDirs false
}

task cleanNewrelic(type: Delete) {
    delete 'newrelic-staging'
}

tasks.unzipNewrelic.dependsOn downloadNewrelic
tasks.build.dependsOn unzipNewrelic
tasks.clean.dependsOn cleanNewrelic

spotless {
    java {
        importOrder()
        removeUnusedImports()
        eclipse()
        indentWithSpaces(4)
    }
    groovyGradle() {
        greclipse()
        indentWithSpaces(4)
    }
}

test {
    useJUnitPlatform()
}
